'!TITLE "Zimmer Holding Register Functions"
' ***************************************************************************************
' * RC8 Driver For Zimmer Gripper														*
' *																						*
' * Author: Carlos A. Lopez																*
' *																						*
' * If you have any issues with this driver 											*
' * please contact us at: 																*
' * 																					*
' *	< robotics_applications@densodrive.com >											*
' *																						*
' * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, *	
' * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 		*
' * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT 	*
' * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION 	*
' * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE 		*
' * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.								*
' *																						*
' ***************************************************************************************

#Include "Zimmer.h"

' ****************************************************************************************
' *---HOLDING REGISTERS (READ)-----------------------------------------------------------*
' ****************************************************************************************

'----------------------------------------------------------------------------------------
' Get Zimmer Control Word Parameter
'----------------------------------------------------------------------------------------
Function ZGet_CtrlWord(ZGripper As Variant) As Integer
	' Extract 1st Element of Output Data Array
	Dim RegisterNo As Object
	RegisterNo = zExtractObjElement(ZGripper, 3, 0)		

	' Read Control Word Parameter Value
	ZGet_CtrlWord = Cao_GetVariable(RegisterNo)			
End Function

'----------------------------------------------------------------------------------------
' ZGet_DeviceMode
'----------------------------------------------------------------------------------------
Function ZGet_DeviceMode(ZGripper As Variant) As Integer
	' Extract 2nd Element of Output Data Array
	Dim RegisterNo As Object
	RegisterNo = zExtractObjElement(ZGripper, 3, 1)		
	
	'Return Current Device Mode
	ZGet_DeviceMode = zGetMSB( Cao_GetVariable(RegisterNo) )
End Function

'----------------------------------------------------------------------------------------
' ZGet_WorkpieceNo
'----------------------------------------------------------------------------------------
Function ZGet_WorkpieceNo(ZGripper As Variant) As Integer
	' Extract 3rd Element of Output Data Array
	Dim RegisterNo As Object
	RegisterNo = zExtractObjElement(ZGripper, 3, 1)		
	
	'Return Current Workpiece Number
	ZGet_WorkpieceNo = zGetLSB( Cao_GetVariable(RegisterNo) )			
End Function

'----------------------------------------------------------------------------------------
' ZGet_PoseTolerance
'----------------------------------------------------------------------------------------
Function ZGet_PoseTolerance(ZGripper As Variant) As Integer
	' Extract 5th Element of Output Data Array
	Dim RegisterNo As Object
	RegisterNo = zExtractObjElement(ZGripper, 3, 2)		

	'Return Current Position Tolerance (Scale to nearest 0.01mm)
		ZGet_PoseTolerance = zGetLSB( Cao_GetVariable(RegisterNo) )	* 0.01
End Function

'----------------------------------------------------------------------------------------
' ZGet_GripForce
'----------------------------------------------------------------------------------------
Function ZGet_GripForce(ZGripper As Variant) As Integer
	' Extract 6th Element of Output Data Array
	Dim RegisterNo As Object
	RegisterNo = zExtractObjElement(ZGripper, 3, 3)	
	
	'Return Current Grip Force 
	ZGet_GripForce = zGetMSB( Cao_GetVariable(RegisterNo) )
End Function

'----------------------------------------------------------------------------------------
' ZGet_DriveVelocity
'----------------------------------------------------------------------------------------
Function ZGet_DriveVelocity(ZGripper As Variant) As Integer
	' Extract 7th Element of Output Data Array
	Dim RegisterNo As Object
	RegisterNo = zExtractObjElement(ZGripper, 3, 3)		
	
	'Return Current Drive Velocity
	ZGet_DriveVelocity = zGetLSB( Cao_GetVariable(RegisterNo) )		
End Function

'----------------------------------------------------------------------------------------
' ZGet_BasePose
'----------------------------------------------------------------------------------------
Function ZGet_BasePose(ZGripper As Variant) As Single
	' Extract 8th Element of Output Data Array
	Dim RegisterNo As Object
	RegisterNo = zExtractObjElement(ZGripper, 3, 4)		
	
	' Read Base Position (Scale to nearest 0.01mm)
	ZGet_BasePose = Cao_GetVariable(RegisterNo)*0.01	
End Function

'----------------------------------------------------------------------------------------
' ZGet_ShiftPose
'----------------------------------------------------------------------------------------
Function ZGet_ShiftPose(ZGripper As Variant) As Single
	' Extract 9th Element of Output Data Array
	Dim RegisterNo As Object
	RegisterNo = zExtractObjElement(ZGripper, 3, 5)		
	
	' Read Shift Pose (Scale to nearest 0.01mm)
	ZGet_ShiftPose = Cao_GetVariable(RegisterNo)*0.01	
End Function

'----------------------------------------------------------------------------------------
' ZGet_TeachPose
'----------------------------------------------------------------------------------------
Function ZGet_TeachPose(ZGripper As Variant) As Single
	' Extract 10th Element of Output Data Array
	Dim RegisterNo As Object
	RegisterNo = zExtractObjElement(ZGripper, 3, 6)
	
	' Read Teach Position (Scale to nearest 0.01mm)
	ZGet_TeachPose = Cao_GetVariable(RegisterNo)*0.01
End Function

'----------------------------------------------------------------------------------------
' ZGet_WorkPose
'----------------------------------------------------------------------------------------
Function ZGet_WorkPose(ZGripper As Variant) As Single
	' Extract 11th Element of Output Data Array
	Dim RegisterNo As Object
	RegisterNo = zExtractObjElement(ZGripper, 3, 7)		
	
	' Read Work Position (Scale to nearest 0.01mm)
	ZGet_WorkPose = Cao_GetVariable(RegisterNo)*0.01	
End Function

' ***************************************************************************************
' *---HOLDING REGISTERS (WRITE)---------------------------------------------------------*
' ***************************************************************************************

'----------------------------------------------------------------------------------------
' ZSet_CtrlWord
'----------------------------------------------------------------------------------------
Function ZSet_CtrlWord(ZGripper As Variant, newValue As Variant) As Integer 
	' Validate New Data (If not Throw Error)
	If zInRange(newValue, 0, 65535) = 0 Then Err.Raise &h83500127	' Out of Range

	' Extract 1st Element of Output Data Array	
	Dim RegisterNo As Object
	RegisterNo = zExtractObjElement(ZGripper, 3, 0)			
	
	' Write to Control Word Parameter Variable
	ZSet_CtrlWord = Cao_SetVariable(RegisterNo, newValue)	
End Function

'----------------------------------------------------------------------------------------
' ZSet_DeviceMode
'----------------------------------------------------------------------------------------
Function ZSet_DeviceMode(ZGripper As Variant, newValue As Variant) As Integer
	' Validate New Data (If not Throw Error)
	If zInRange(newValue, 0, 255) = 0 Then Err.Raise &h83500127	' Out of Range
	
	' Extract 2nd Element of Output Data Array	
	Dim RegisterNo As Object
	RegisterNo = zExtractObjElement(ZGripper, 3, 1)			

	' Write to Control Word Parameter Variable
	newValue = zSetMSB( Cao_GetVariable(RegisterNo), newValue )
	ZSet_DeviceMode = Cao_SetVariable(RegisterNo, newValue) 	
End Function

'----------------------------------------------------------------------------------------
' ZSet_WorkpieceNo
'----------------------------------------------------------------------------------------
Function ZSet_WorkpieceNo(ZGripper As Variant, newValue As Variant) As Integer
	' Validate New Data (If not Throw Error)
	If zInRange(newValue, 0, 32) = 0 Then Err.Raise &h83500127	' Out of Range
	
	' Extract 2nd Element of Output Data Array	
	Dim RegisterNo As Object
	RegisterNo = zExtractObjElement(ZGripper, 3, 1)
	
	' Write to Control Word Parameter Variable
	newValue = zSetLSB( Cao_GetVariable(RegisterNo), newValue )
	ZSet_WorkpieceNo = Cao_SetVariable(RegisterNo, newValue)	
End Function

'----------------------------------------------------------------------------------------
' ZSet_PoseTolerance
'----------------------------------------------------------------------------------------
Function ZSet_PoseTolerance(ZGripper As Variant, newValue As Variant) As Integer
	' Validate New Data (If not Throw Error)
	If zInRange(newValue, 0, 255) = 0 Then Err.Raise &h83500127	' Out of Range

	' Extract 3rd Element of Output Data Array	
	Dim RegisterNo As Object
	RegisterNo = zExtractObjElement(ZGripper, 3, 2)	
	
	' Scale Value to Nearest Integer
	newValue = newValue/0.01			

	' Write to Control Word Parameter Variable
	newValue = zSetLSB( Cao_GetVariable(RegisterNo), newValue )
	ZSet_PoseTolerance = Cao_SetVariable(RegisterNo, newValue)
End Function

'----------------------------------------------------------------------------------------
' ZSet_GripForce
'----------------------------------------------------------------------------------------
Function ZSet_GripForce(ZGripper As Variant, newValue As Variant) As Integer
	' Validate New Data (If not Throw Error)
	If zInRange(newValue, 0, 130) = 0 Then Err.Raise &h83500127	' Out of Range
	
	' Extract 4th Element of Output Data Array	
	Dim RegisterNo As Object
	RegisterNo = zExtractObjElement(ZGripper, 3, 3)

	' Write to Control Word Parameter Variable
	newValue = zSetMSB( Cao_GetVariable(RegisterNo), newValue )
	ZSet_GripForce = Cao_SetVariable(RegisterNo, newValue)
End Function

'----------------------------------------------------------------------------------------
' ZSet_DriveVelocity
'----------------------------------------------------------------------------------------
Function ZSet_DriveVelocity(ZGripper As Variant, newValue As Variant) As Integer
	' Validate New Data (If not Throw Error)
	If zInRange(newValue, 0, 65535) = 0 Then Err.Raise &h83500127	' Out of Range
	
	' Extract 4th Element of Output Data Array	
	Dim RegisterNo As Object
	RegisterNo = zExtractObjElement(ZGripper, 3, 3)
	
	' Write to Control Word Parameter Variable
	newValue = zSetLSB( Cao_GetVariable(RegisterNo), newValue )
	ZSet_DriveVelocity = Cao_SetVariable(RegisterNo, newValue)
End Function

'----------------------------------------------------------------------------------------
' ZSet_BasePose
'----------------------------------------------------------------------------------------
Function ZSet_BasePose(ZGripper As Variant, newValue As Variant) As Integer 
	' Validate New Data (If not Throw Error)
	If zInRange(newValue, 0, 65535) = 0 Then Err.Raise &h83500127	' Out of Range	
	
	' Extract 5th Element of Output Data Array	
	Dim RegisterNo As Object
	RegisterNo = zExtractObjElement(ZGripper, 3, 4)			
	
	' Scale Value to Nearest Integer
	newValue = newValue/0.01					
	
	' Write to Control Word Parameter Variable
	ZSet_BasePose = Cao_SetVariable(RegisterNo, newValue)	
End Function

'----------------------------------------------------------------------------------------
' ZSet_ShiftPose
'----------------------------------------------------------------------------------------
Function ZSet_ShiftPose(ZGripper As Variant, newValue As Variant) As Integer 
	' Validate New Data (If not Throw Error)
	If zInRange(newValue, 0, 65535) = 0 Then Err.Raise &h83500127	' Out of Range	
	
	' Extract 6th Element of Output Data Array	
	Dim RegisterNo As Object
	RegisterNo = zExtractObjElement(ZGripper, 3, 5)			

	' Scale Value to Nearest Integer
	newValue = newValue/0.01
		
	' Write to Control Word Parameter Variable
	ZSet_ShiftPose = Cao_SetVariable(RegisterNo, newValue)	
End Function

'----------------------------------------------------------------------------------------
' ZSet_TeachPose
'----------------------------------------------------------------------------------------
Function ZSet_TeachPose(ZGripper As Variant, newValue As Variant) As Integer 
	' Validate New Data (If not Throw Error)
	If zInRange(newValue, 0, 65535) = 0 Then Err.Raise &h83500127	' Out of Range	
	
	' Extract 7th Element of Output Data Array	
	Dim RegisterNo As Object
	RegisterNo = zExtractObjElement(ZGripper, 3, 6)			

	' Scale Value to Nearest Integer
	newValue = newValue/0.01
		
	' Write to Control Word Parameter Variable
	ZSet_TeachPose = Cao_SetVariable(RegisterNo, newValue)	
End Function

'----------------------------------------------------------------------------------------
' ZSet_WorkPose
'----------------------------------------------------------------------------------------
Function ZSet_WorkPose(ZGripper As Variant, newValue As Variant) As Integer 
	' Validate New Data (If not Throw Error)
	If zInRange(newValue, 0, 65535) = 0 Then Err.Raise &h83500127	' Out of Range	
	
	' Extract 8th Element of Output Data Array	
	Dim RegisterNo As Object
	RegisterNo = zExtractObjElement(ZGripper, 3, 7)			

	' Scale Value to Nearest Integer
	newValue = newValue/0.01
		
	' Write to Control Word Parameter Variable
	ZSet_WorkPose = Cao_SetVariable(RegisterNo, newValue)	
End Function
